{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\n\nconst startButton = document.querySelector(\"[data-start]\");\n\n\nflatpickr(\"#datetime-picker\", {\n    enableTime: true,\n    time_24h: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n\n        if (userSelectedDate > new Date()) {\n            startButton.disabled = false;\n        } else {\n            startButton.disabled = true;\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n                position: 'topRight',\n            });\n        }\n    },\n});\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    const days = Math.floor(ms / day);\n\n    const hours = Math.floor((ms % day) / hour);\n\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n\nconst timer = document.querySelector('.timer')\n\nfunction addLeadingZero(value) {\n    if (value < 10) {\n        return value.toString().padStart(2, \"0\");\n    } else {\n        return value.toString();\n    }\n};\n\n\nfunction startTimer() {\n    const difference = userSelectedDate - new Date();\n\n    if (difference > 0) {\n        const { days, hours, minutes, seconds } = convertMs(difference);\n\n        document.querySelector(\"[data-days]\").textContent = addLeadingZero(days);\n        document.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n        document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\n        document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n\n        setTimeout(startTimer, 1000);\n    } else {\n        \n    }\n};\n\n\nstartButton.addEventListener(\"click\", () => {\n    if (userSelectedDate) {\n        startTimer();\n    } else {\n        iziToast.error({\n            title: 'Error',\n            message: 'Please choose a date in the future',\n            position: 'topRight',\n        });;\n    }\n});"],"names":["userSelectedDate","startButton","flatpickr","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","startTimer","difference"],"mappings":"+IAKA,IAAIA,EAEJ,MAAMC,EAAc,SAAS,cAAc,cAAc,EAGzDC,EAAU,mBAAoB,CAC1B,WAAY,GACZ,SAAU,GACV,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBH,EAAmBG,EAAc,CAAC,EAE9BH,EAAmB,IAAI,KACvBC,EAAY,SAAW,IAEvBA,EAAY,SAAW,GACvBG,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,UAC1B,CAAa,EAER,CACL,CAAC,EAED,SAASC,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAEW,SAAS,cAAc,QAAQ,EAE7C,SAASC,EAAeC,EAAO,CAC3B,OAAIA,EAAQ,GACDA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAEhCA,EAAM,UAErB,CAGA,SAASC,GAAa,CAClB,MAAMC,EAAad,EAAmB,IAAI,KAE1C,GAAIc,EAAa,EAAG,CAChB,KAAM,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUS,CAAU,EAE9D,SAAS,cAAc,aAAa,EAAE,YAAcH,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAeD,CAAO,EAE7E,WAAWG,EAAY,GAAI,CAG9B,CACL,CAGAZ,EAAY,iBAAiB,QAAS,IAAM,CACpCD,EACAa,IAEAT,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,UACb,CAAA,CAET,CAAC"}